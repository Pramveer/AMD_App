USE `IMS_LRX_AmbEMR_Dataset`;
DROP procedure IF EXISTS `AddUpdatePTRiskBenefitsData`;

DELIMITER $$
USE `IMS_LRX_AmbEMR_Dataset`$$
CREATE DEFINER=`root`@`%` PROCEDURE `AddUpdatePTRiskBenefitsData`(
IN ptUSERNAME VARCHAR(50),
IN ptMEDICATION VARCHAR(255),
IN ptSOCIAL_BENIFITS TINYINT(3),
IN ptRISK1 TINYINT(3),
IN ptRISK2 TINYINT(3),
IN ptRISK3 TINYINT(3),
IN ptRISK4 TINYINT(3),
IN ptRISK5 TINYINT(3),
IN ptRISK6 TINYINT(3),
IN ptRISK7 TINYINT(3),
IN ptRISK8 TINYINT(3),
IN ptRISK9 TINYINT(3),
IN ptRISK10 TINYINT(3),
IN ptRISK11 TINYINT(3),
IN ptRISK12 TINYINT(3),
IN ptRISK13 TINYINT(3),
IN ptRISK14 TINYINT(3)
)
BEGIN

/*
Insert & Update PT risk & social benefits data from user,


call AddUpdatePTRiskBenefitsData(18181044);

Author		Date 		 Comments
Jayesh 		02/14/2017   Intial - Insert & Update PT risk & social benefits data 


*/
IF EXISTS( SELECT 1 FROM PT_RISK_BENEFITS WHERE USERNAME = ptUSERNAME AND MEDICATION = ptMEDICATION LIMIT 1)
THEN

UPDATE PT_RISK_BENEFITS
SET
SOCIAL_BENIFITS= ptSOCIAL_BENIFITS ,
RISK1= ptRISK1,
RISK2= ptRISK2,
RISK3= ptRISK3,
RISK4= ptRISK4,
RISK5= ptRISK5,
RISK6= ptRISK6,
RISK7= ptRISK7,
RISK8= ptRISK8,
RISK9= ptRISK9,
RISK10= ptRISK10,
RISK11= ptRISK11,
RISK12= ptRISK12,
RISK13= ptRISK13,
RISK14 = ptRISK14 WHERE USERNAME = ptUSERNAME AND MEDICATION = ptMEDICATION;

ELSE

INSERT INTO PT_RISK_BENEFITS
(USERNAME,
MEDICATION,
SOCIAL_BENIFITS,
RISK1,
RISK2,
RISK3,
RISK4,
RISK5,
RISK6,
RISK7,
RISK8,
RISK9,
RISK10,
RISK11,
RISK12,
RISK13,
RISK14)
VALUES(ptUSERNAME, ptMEDICATION, ptSOCIAL_BENIFITS, ptRISK1, ptRISK2, ptRISK3, ptRISK4, ptRISK5, ptRISK6, ptRISK7, ptRISK8, ptRISK9, ptRISK10, ptRISK11, ptRISK12, ptRISK13, ptRISK14);


END IF;



END$$

DELIMITER ;

